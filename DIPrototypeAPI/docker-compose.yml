
version: '3.4'

networks:
    dev:
      driver: bridge
services:
  diprototype:
    container_name: diprototype
    ports:
      - "5009:80"
    image: ${DOCKER_REGISTRY-}diprototype
    build:
      dockerfile: Dockerfile
    environment:
        ASPNETCORE_URLS: http://+:80
    networks:
        - dev
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - dev
  ibmmq:
    image: ibmcom/mq:latest
    ports:
      - "1414:1414"
      - "9443:9443"
    hostname: mq
    environment:
        - LICENSE=accept
        - MQ_QMGR_NAME=QM1
    container_name: mqserver
    stdin_open: true
    tty: true
    restart: always
    networks:
        - dev  
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - dev  
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: always
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: password
    networks:
      - dev
# Names our volume
volumes:
  mysql-data:
  cache:
    driver: local      